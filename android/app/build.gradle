def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "cari.makan.com"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "app"
    
    productFlavors {
        dev {
            dimension "app"
            applicationId "cari.makan.com.dev"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

        preprod {
            dimension "app"
            applicationId "cari.makan.com.preprod"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

        prod {
            dimension "app"
            applicationId "cari.makan.com"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

    }

    buildTypes {
        profile {
            ndk {
                if (project.hasProperty('target-platform') &&
                project.property('target-platform') == 'android-arm64') {
                    abiFilters 'arm64-v8a'
                } else {
                    abiFilters 'armeabi-v7a'
                }
            }
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        
            ndk {
                if (project.hasProperty('target-platform') && project.property('target-platform') == 'android-arm64') {
                    abiFilters 'arm64-v8a'
                } else {
                    abiFilters 'armeabi-v7a'
                }
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
